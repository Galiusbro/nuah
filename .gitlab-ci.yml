# Используем официальный образ Rust в качестве операционной системы для нашего робота
image: rust:latest

# Определяем этапы нашего пайплайна. Пока у нас только один - сборка.
stages:
  - build

# Описываем нашу задачу (job) по сборке
build_blockchain:
  stage: build # Говорим, что эта задача относится к этапу "build"
  
  # Команды, которые робот должен выполнить в терминале
  script:
    # 1. Solana требует некоторые системные пакеты, которых нет в базовом образе Rust. Установим их.
    - apt-get update && apt-get install -y libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang
    
    # 2. Запускаем тот же скрипт сборки, что и ты на локальной машине.
    # Он скомпилирует все и положит бинарники в /root/.cargo/bin/
    - ./scripts/cargo-install-all.sh .
    
  # После успешного выполнения скрипта, сохраняем результат
  artifacts:
    name: "solana-binaries"
    # Указываем, какие файлы и папки нужно сохранить
    paths:
      - /root/.cargo/bin/  # <-- Здесь лежат готовые solana-validator, solana-genesis и т.д.
    # Указываем, сколько хранить артефакты (например, 1 неделю)
    expire_in: 1 week