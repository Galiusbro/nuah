#!/bin/bash

# Solana Validator Manager
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–º

set -e

VALIDATOR_PID_FILE="/tmp/solana-validator.pid"
LOG_FILE="/tmp/solana-validator.log"

show_help() {
    echo "Solana Validator Manager"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä"
    echo "  status    - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  clean     - –û—á–∏—Å—Ç–∏—Ç—å ledger –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å genesis"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start"
    echo "  $0 status"
    echo "  $0 logs"
}

check_dependencies() {
    if [ ! -f "./target/release/solana-validator" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: solana-validator –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:"
        echo "   cargo build --release --bin solana-validator"
        exit 1
    fi
    
    if [ ! -f "./target/release/solana-genesis" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: solana-genesis –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:"
        echo "   cargo build --release --bin solana-genesis"
        exit 1
    fi
}

is_running() {
    if [ -f "$VALIDATOR_PID_FILE" ]; then
        local pid=$(cat "$VALIDATOR_PID_FILE")
        if kill -0 "$pid" 2>/dev/null; then
            return 0
        else
            rm -f "$VALIDATOR_PID_FILE"
        fi
    fi
    return 1
}

start_validator() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."
    
    if is_running; then
        echo "‚ö†Ô∏è  –í–∞–ª–∏–¥–∞—Ç–æ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: $(cat $VALIDATOR_PID_FILE))"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ genesis –±–ª–æ–∫–∞
    if [ ! -f "test-ledger/genesis.bin" ]; then
        echo "‚ùå Genesis –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π..."
        create_genesis
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –≤ —Ñ–æ–Ω–µ
    nohup ./start-validator.sh > "$LOG_FILE" 2>&1 &
    local pid=$!
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
    echo $pid > "$VALIDATOR_PID_FILE"
    
    echo "‚úÖ –í–∞–ª–∏–¥–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
    echo "üìù –õ–æ–≥–∏: $LOG_FILE"
    echo "üåê RPC: http://localhost:8899"
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 3
    if is_running; then
        echo "‚úÖ –í–∞–ª–∏–¥–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: $LOG_FILE"
        return 1
    fi
}

stop_validator() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."
    
    if ! is_running; then
        echo "‚ö†Ô∏è  –í–∞–ª–∏–¥–∞—Ç–æ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 0
    fi
    
    local pid=$(cat "$VALIDATOR_PID_FILE")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∞–ª–∏–¥–∞—Ç–æ—Ä
    if kill "$pid" 2>/dev/null; then
        echo "‚úÖ –°–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (PID: $pid)"
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        local count=0
        while kill -0 "$pid" 2>/dev/null && [ $count -lt 30 ]; do
            sleep 1
            count=$((count + 1))
            echo -n "."
        done
        echo ""
        
        if kill -0 "$pid" 2>/dev/null; then
            echo "‚ö†Ô∏è  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
            kill -9 "$pid" 2>/dev/null
        fi
        
        rm -f "$VALIDATOR_PID_FILE"
        echo "‚úÖ –í–∞–ª–∏–¥–∞—Ç–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞"
        return 1
    fi
}

restart_validator() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."
    stop_validator
    sleep 2
    start_validator
}

show_status() {
    echo "=== –°—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ ==="
    
    if is_running; then
        local pid=$(cat "$VALIDATOR_PID_FILE")
        echo "‚úÖ –í–∞–ª–∏–¥–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º RPC
        echo -n "RPC (–ø–æ—Ä—Ç 8899): "
        if curl -s -X POST -H "Content-Type: application/json" \
           -d '{"jsonrpc":"2.0","id":1,"method":"getSlot"}' \
           http://localhost:8899 > /dev/null 2>&1; then
            echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
        else
            echo "‚ùå –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ª–æ—Ç
        echo -n "–¢–µ–∫—É—â–∏–π —Å–ª–æ—Ç: "
        local slot=$(curl -s -X POST -H "Content-Type: application/json" \
                    -d '{"jsonrpc":"2.0","id":1,"method":"getSlot"}' \
                    http://localhost:8899 | grep -o '"result":[0-9]*' | cut -d: -f2)
        if [ -n "$slot" ]; then
            echo "‚úÖ $slot"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥ —Ñ–∞–π–ª–∞
        if [ -f "$LOG_FILE" ]; then
            local size=$(du -h "$LOG_FILE" | cut -f1)
            echo "üìù –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: $size"
        fi
        
    else
        echo "‚ùå –í–∞–ª–∏–¥–∞—Ç–æ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º genesis
    echo -n "Genesis –±–ª–æ–∫: "
    if [ -f "test-ledger/genesis.bin" ]; then
        local genesis_hash=$(./target/release/solana-ledger-tool genesis-hash --ledger test-ledger 2>/dev/null | tail -1)
        if [ -n "$genesis_hash" ]; then
            echo "‚úÖ $genesis_hash"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è"
        fi
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

show_logs() {
    if [ ! -f "$LOG_FILE" ]; then
        echo "‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä —Å–Ω–∞—á–∞–ª–∞."
        return 1
    fi
    
    echo "üìù –ü–æ–∫–∞–∑—ã–≤–∞—é –ª–æ–≥–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..."
    tail -f "$LOG_FILE"
}

create_genesis() {
    echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ genesis –±–ª–æ–∫–∞..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π ledger
    if [ -d "test-ledger" ]; then
        rm -rf test-ledger
        echo "üóëÔ∏è  –°—Ç–∞—Ä—ã–π ledger —É–¥–∞–ª–µ–Ω"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π genesis
    ./target/release/solana-genesis \
        --cluster-type development \
        --bootstrap-validator 4HsF1TZVyGRrgbHb1VqG7jTSggJfuKZUBczzAhhXcgNr \
                              CdouXV7MkywK3PrCj8eZBTxXG9NvzMCgNnaqGURvmJyX \
                              8Hxncg3ZZ69xhVTnwb3CfTCdHk5KDAra37wszXWya69J \
        --ledger test-ledger \
        --hashes-per-tick auto \
        --bootstrap-validator-lamports 500000000000000 \
        --faucet-pubkey validator-keypair.json \
        --faucet-lamports 1000000000000000
    
    echo "‚úÖ Genesis –±–ª–æ–∫ —Å–æ–∑–¥–∞–Ω"
}

clean_ledger() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ ledger –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ genesis..."
    
    if is_running; then
        echo "‚ö†Ô∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π..."
        stop_validator
    fi
    
    create_genesis
    echo "‚úÖ Ledger –æ—á–∏—â–µ–Ω –∏ genesis –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    start)
        check_dependencies
        start_validator
        ;;
    stop)
        stop_validator
        ;;
    restart)
        check_dependencies
        restart_validator
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    clean)
        clean_ledger
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
